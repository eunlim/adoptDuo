<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<!-- 해당 패키지의 객체 주입 -->
	<context:component-scan base-package="org.project.signt" />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
	  <beans:property name="order" value="0"></beans:property>
	</beans:bean>
	<beans:bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" id="jsonView">
	    <beans:property name="contentType" value="application/json;charset=UTF-8"/>
	</beans:bean>


	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" >
	    <beans:property name="order" value="1"></beans:property>
	    <beans:property name="contentType" value="text/html; charset=UTF-8"></beans:property>
	</beans:bean>
	
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
	    <beans:property name="definitions">
	        <beans:list>
	            <beans:value>/WEB-INF/tiles/tiles.xml</beans:value>
	        </beans:list>
	    </beans:property>
	</beans:bean>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2"></beans:property>
	</beans:bean>
	
	<!-- aop의 설정을 통한 자동 proxy 객체 생성 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	
	<!-- mutipartResolver : support file upload -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding" value="utf8" />
		<beans:property name="maxUploadSize" value="-1" /><!-- 400mb - 404800000-->
	</beans:bean>		
	
 	<interceptors>
		<interceptor>
			<mapping path="/**/*" />
			<beans:bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
				<beans:property name="cacheSeconds" value="0" />
				<beans:property name="useExpiresHeader" value="true" />
				<beans:property name="useCacheControlHeader" value="true" />
				<beans:property name="useCacheControlNoStore" value="true" />
			</beans:bean>
		</interceptor>
	</interceptors>
	
	
</beans:beans>
